// Code generated by re2dfa (https://github.com/opennota/re2dfa).

package test

import "unicode/utf8"

//func isWordChar(r byte) bool {
//        return 'A' <= r && r <= 'Z' || 'a' <= r && r <= 'z' || '0' <= r && r <= '9' || r == '_'
//}

func matchCharClass(s string) int {
	st := 1
	end := -1
	i := 0
	var r rune
	_ = r
	var rlen int

	for {
		r, rlen = utf8.DecodeRuneInString(s[i:])
		if rlen == 0 {
			break
		}
		i += rlen

		switch st {
		case 1:
			switch {
			case (r >= 97 && r <= 122):
				end = i
				return end
			default:
				return end
			}
		}
	}

	return end
}
